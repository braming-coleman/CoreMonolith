variables:
  solution: '**/*.sln' # Path to your solution file
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.0.x' # Or your desired .NET SDK version

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: $(solution)
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests with code coverage'
  inputs:
    command: 'test'
    projects: '**/*tests/*.csproj' # Adjust the path if your test projects are located elsewhere
    arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage" --results-directory "TestResults"'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
    failIfCoverageEmpty: true # Fail the build if no code coverage data is collected

- task: PublishTestResults@2
  displayName: 'Publish unit test results'
  inputs:
    testResultsFiles: '**/TestResults/*.trx'
    testRunTitle: 'Unit Tests'
    failTaskOnFailedTests: true # Fail the build if any unit tests fail